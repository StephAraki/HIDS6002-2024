---
title: "Class 3 Project"
format: 
  html:
    embed-resources: true
---

This file serves as a template for the Class 3 in-class project.

```{r}
#| warning: false
library(tidyverse)     # loads the tidyverse tools
library(RPostgres)     # loads the database driver for PostgreSQL
library(connections)   # helps RPostgres work with RStudio
library(keyring)       # access to a local encrypted keychain for passwords

con <- connection_open(RPostgres::Postgres(),
          dbname = "syntheticmguh",
          host = "34.145.215.95",
          user = "hids502_student",
          password = key_get(service = "syntheticmguh", 
                             username = "hids502_student"),
          # Tell the driver to return very large integers as floating point (vs truncating them)
          bigint = "numeric")
        
```

# Question 1

How many patients do we have in the database?

```{sql connection=con}
SELECT COUNT(*) AS patient_count FROM patients 
```


How many providers and payers are represented in the data set?

```{sql connection=con}
-- Your code goes here
SELECT COUNT(DISTINCT(Provider)) as provider_count,
COUNT(DISTINCT(Payer)) as payer_count
FROM encounters;
```

```{sql connection=con}
-- Your code goes here
```

# Question 2

What is the mean amount spent per patient?
```{sql connection=con}
-- Your code goes here
SELECT avg(total_claim_cost) 
FROM encounters;
```

What does this look like broken down by year?
```{sql connection=con}
-- Your code goes here
SELECT avg(total_claim_cost) as avg_total_claim_cost,
EXTRACT(YEAR from start) as start_year
FROM encounters
GROUP BY start_year
ORDER BY start_year DESC
;
```


# Question 3

What is the mean amount spent for Medicare patients?
```{sql connection=con}
-- Your code goes here
SELECT avg(total_claim_cost) as avg_total_claim_cost_medicare
FROM encounters
LEFT JOIN payers
ON encounters.payer = payers.id
WHERE payers.name LIKE 'Medicare'
;
```


What does this look like broken down by  year?
```{sql connection=con}
-- Your code goes here
SELECT avg(total_claim_cost) as avg_total_claim_cost_medicare,
EXTRACT(YEAR from encounters.start) as start_year
FROM encounters
LEFT JOIN payers
ON encounters.payer = payers.id
WHERE payers.name LIKE 'Medicare'
GROUP BY start_year
ORDER BY start_year DESC
;
```

# Question 4

Using a common table expression, what are the min, max, and mean number of patients per provider?

Using the raw data in R, plot this as a boxplot as well.

Here's an example of a boxplot (note the additional use of the `y` axis that you probably don't need here.)
```{sql connection=con}
WITH patients AS (
SELECT COUNT(DISTINCT patient) as patient_count,
provider
FROM encounters
GROUP BY encounters.provider)
SELECT min(patient_count),
max(patient_count),
avg(patient_count)
FROM patients;

```
```{sql connection=con, output.var="providers_patients_df"}
-- plot this!
SELECT COUNT(DISTINCT patient) as patient_count,
provider
FROM encounters
GROUP BY encounters.provider;
```

```{sql connection=con}
-- Here we use `output.var` to assign the results of the query to a variable
-- rather than printing!
-- SELECT id, race, healthcare_expenses FROM patients

WITH provider_patient_counts AS (
SELECT COUNT(DISTINCT patient) as patient_count,
provider
FROM encounters
GROUP BY encounters.provider)
SELECT min(patient_count),
max(patient_count),
avg(patient_count)
FROM provider_patient_counts;
```

```{r}
# plot the number of patients per provider ID 
ggplot(providers_patients_df) + 
  geom_boxplot(aes(x = patient_count, y = provider))
```

# Question 5

What is the min/max and mean number of encounters per patient in 2022? 
```{sql connection=con}

WITH encounter_patient_count AS (
SELECT COUNT(patient) as patient_count
FROM encounters
WHERE EXTRACT(YEAR from start) = 2022
GROUP BY patient)
SELECT min(patient_count), 
max(patient_count), 
avg(patient_count)
FROM encounter_patient_count;
```

Plot the distribution as a histogram â€“ this will require you to use R
```{sql connection=con, output.var="encounter_patient_df"}

SELECT provider,
COUNT(DISTINCT(patient)) as patient_count
FROM encounters
WHERE EXTRACT(YEAR from start) = 2022
GROUP BY provder;
```

Here's an example of a boxplot

```{r}
ggplot(encounter_patient_df) + 
  geom_histogram(aes(x = healthcare_expenses))
```
# Question 6 (Optional)

What time frame does the database cover? In other words, when does the data start and when does it end?

Show the volume of visits over time (as a table or a plot)

```{sql connection=con}
-- Your code goes here
```
